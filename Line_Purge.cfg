[gcode_macro LINE_PURGE]
description: A purge macro that adapts to be near your actual printed objects
variable_purge_start_x: -4.5
variable_purge_start_y: 5

variable_verbose_enable: True
variable_purge_height: 0.8                  # Z position of nozzle during purge, default is 0.8.
variable_tip_distance: 0                    # Distance between tip of filament and nozzle before purge. Should be similar to PRINT_END final retract amount.
variable_purge_amount: 50                   # Amount of filament to be purged prior to printing.
variable_flow_rate: 12                      # Flow rate of purge in mm3/s. Default is 12.
gcode:
    RESPOND TYPE=command MSG='Call custom LINE_PURGE'
    # Get relevant printer params
    {% set travel_speed = (printer.toolhead.max_velocity) * 20 | float %}
    {% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
    
    # Use firmware retraction if it is defined
    {% if printer.firmware_retraction is defined %}
        {% set RETRACT = G10 | string %}
        {% set UNRETRACT = G11 | string %}
    {% else %}
        {% set RETRACT = 'G1 E-.5 F2100' | string %}
        {% set UNRETRACT = 'G1 E.5 F2100' | string %}
    {% endif %}
    
    # Calculate purge speed
    {% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}

    {% if cross_section < 5 %}
        {action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
    {% else %}

        {% if verbose_enable == True %}

        {action_respond_info("Moving filament tip {}mms".format(                                                                 
            (tip_distance),                                                                                      
        )) }
        {% endif %}

        {% if printer.firmware_retraction is defined %}
            {action_respond_info("Purge is using firmware retraction.")}
        {% else %}
            {action_respond_info("Purge is not using firmware retraction, it is recommended to configure it.")}
        {% endif %}

        SAVE_GCODE_STATE NAME=Prepurge_State                                                    # Create gcode state

        G92 E0                                                                              # Reset extruder
        G0 F{travel_speed}                                                                  # Set travel speed
        G90                                                                                 # Absolute positioning
        G0 X{purge_start_x} Y{purge_start_y}                                                # Move to purge position
        G0 Z{purge_height}                                                                  # Move to purge Z height
        M83                                                                                 # Relative extrusion mode
        G1 E{tip_distance} F{purge_move_speed}                                              # Move filament tip
        G1 Y{purge_start_y + purge_amount} E{purge_amount} F{purge_move_speed}              # Purge line
        {RETRACT}                                                                           # Retract
        G0 Y{purge_start_y + purge_amount + 10} F{travel_speed}                             # Rapid move to break string
        G92 E0                                                                              # Reset extruder distance
        M82                                                                                 # Absolute extrusion mode
        G0 Z{purge_height * 2} F{travel_speed}                                              # Z hop

        RESTORE_GCODE_STATE NAME=Prepurge_State                                             # Restore gcode state
    
    {% endif %}


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    _CLIENT_RETRACT

    TURN_OFF_HEATERS

    TURN_OFF_FANS    

    _TOOLHEAD_PARK_PAUSE_CANCEL

    {% set z_position_max = printer.configfile.settings.stepper_z.position_max | float %}
    {% set z_position_current = printer.toolhead.position.z | float %}
    {% set z_position = (z_position_max - z_position_current)/2 %}
    G1 Z{z_position} F600
    
    M84 # motors off